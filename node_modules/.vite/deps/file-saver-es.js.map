{
  "version": 3,
  "sources": ["../../file-saver-es/src/FileSaver.js"],
  "sourcesContent": ["/*\r\n* FileSaver.js\r\n* A saveAs() FileSaver implementation.\r\n*\r\n* By Eli Grey, http://eligrey.com\r\n*\r\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\r\n* source  : http://purl.eligrey.com/github/FileSaver.js\r\n*/\r\n\r\n// The one and only way of getting global scope in all environments\r\n// https://stackoverflow.com/q/3277182/1008999\r\nvar _global = typeof window === 'object' && window.window === window\r\n  ? window : typeof self === 'object' && self.self === self\r\n  ? self : typeof global === 'object' && global.global === global\r\n  ? global\r\n  : this\r\n\r\nfunction bom (blob, opts) {\r\n  if (typeof opts === 'undefined') opts = { autoBom: false }\r\n  else if (typeof opts !== 'object') {\r\n    console.warn('Deprecated: Expected third argument to be a object')\r\n    opts = { autoBom: !opts }\r\n  }\r\n\r\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\r\n  }\r\n  return blob\r\n}\r\n\r\nfunction download (url, name, opts) {\r\n  var xhr = new XMLHttpRequest()\r\n  xhr.open('GET', url)\r\n  xhr.responseType = 'blob'\r\n  xhr.onload = function () {\r\n    saveAs(xhr.response, name, opts)\r\n  }\r\n  xhr.onerror = function () {\r\n    console.error('could not download file')\r\n  }\r\n  xhr.send()\r\n}\r\n\r\nfunction corsEnabled (url) {\r\n  var xhr = new XMLHttpRequest()\r\n  // use sync to avoid popup blocker\r\n  xhr.open('HEAD', url, false)\r\n  try {\r\n    xhr.send()\r\n  } catch (e) {}\r\n  return xhr.status >= 200 && xhr.status <= 299\r\n}\r\n\r\n// `a.click()` doesn't work for all browsers (#465)\r\nfunction click (node) {\r\n  try {\r\n    node.dispatchEvent(new MouseEvent('click'))\r\n  } catch (e) {\r\n    var evt = document.createEvent('MouseEvents')\r\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\r\n                          20, false, false, false, false, 0, null)\r\n    node.dispatchEvent(evt)\r\n  }\r\n}\r\n\r\n// Detect WebView inside a native macOS app by ruling out all browsers\r\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\r\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\r\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\r\n\r\nvar saveAs = _global.saveAs || (\r\n  // probably in some web worker\r\n  (typeof window !== 'object' || window !== _global)\r\n    ? function saveAs () { /* noop */ }\r\n\r\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\r\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\r\n  ? function saveAs (blob, name, opts) {\r\n    var URL = _global.URL || _global.webkitURL\r\n    var a = document.createElement('a')\r\n    name = name || blob.name || 'download'\r\n\r\n    a.download = name\r\n    a.rel = 'noopener' // tabnabbing\r\n\r\n    // TODO: detect chrome extensions & packaged apps\r\n    // a.target = '_blank'\r\n\r\n    if (typeof blob === 'string') {\r\n      // Support regular links\r\n      a.href = blob\r\n      if (a.origin !== location.origin) {\r\n        corsEnabled(a.href)\r\n          ? download(blob, name, opts)\r\n          : click(a, a.target = '_blank')\r\n      } else {\r\n        click(a)\r\n      }\r\n    } else {\r\n      // Support blobs\r\n      a.href = URL.createObjectURL(blob)\r\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\r\n      setTimeout(function () { click(a) }, 0)\r\n    }\r\n  }\r\n\r\n  // Use msSaveOrOpenBlob as a second approach\r\n  : 'msSaveOrOpenBlob' in navigator\r\n  ? function saveAs (blob, name, opts) {\r\n    name = name || blob.name || 'download'\r\n\r\n    if (typeof blob === 'string') {\r\n      if (corsEnabled(blob)) {\r\n        download(blob, name, opts)\r\n      } else {\r\n        var a = document.createElement('a')\r\n        a.href = blob\r\n        a.target = '_blank'\r\n        setTimeout(function () { click(a) })\r\n      }\r\n    } else {\r\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\r\n    }\r\n  }\r\n\r\n  // Fallback to using FileReader and a popup\r\n  : function saveAs (blob, name, opts, popup) {\r\n    // Open a popup immediately do go around popup blocker\r\n    // Mostly only available on user interaction and the fileReader is async so...\r\n    popup = popup || open('', '_blank')\r\n    if (popup) {\r\n      popup.document.title =\r\n      popup.document.body.innerText = 'downloading...'\r\n    }\r\n\r\n    if (typeof blob === 'string') return download(blob, name, opts)\r\n\r\n    var force = blob.type === 'application/octet-stream'\r\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\r\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\r\n\r\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\r\n      // Safari doesn't allow downloading of blob URLs\r\n      var reader = new FileReader()\r\n      reader.onloadend = function () {\r\n        var url = reader.result\r\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\r\n        if (popup) popup.location.href = url\r\n        else location = url\r\n        popup = null // reverse-tabnabbing #460\r\n      }\r\n      reader.readAsDataURL(blob)\r\n    } else {\r\n      var URL = _global.URL || _global.webkitURL\r\n      var url = URL.createObjectURL(blob)\r\n      if (popup) popup.location = url\r\n      else location.href = url\r\n      popup = null // reverse-tabnabbing #460\r\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\r\n    }\r\n  }\r\n)\r\n\r\n_global.saveAs = saveAs.saveAs = saveAs\r\n\r\nexport { saveAs }\r\n"],
  "mappings": "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",
  "names": ["saveAs", "url"]
}
